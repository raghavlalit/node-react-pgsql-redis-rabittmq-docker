// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(USER)
  events    Event[]  @relation("OrganizerEvents")
  bookings  Booking[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Event {
  id          String    @id @default(uuid())
  title       String
  description String
  location    String
  isOnline    Boolean
  startTime   DateTime
  endTime     DateTime
  capacity    Int
  price       Float
  organizer   User      @relation("OrganizerEvents", fields: [organizerId], references: [id])
  organizerId String
  bookings    Booking[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  featured    Boolean   @default(false)
  category    String?
}

model Booking {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  event     Event    @relation(fields: [eventId], references: [id])
  eventId   String
  status    BookingStatus @default(CONFIRMED)
  createdAt DateTime @default(now())
}

enum Role {
  USER
  ORGANIZER
  ADMIN
}

enum BookingStatus {
  CONFIRMED
  CANCELLED
}
